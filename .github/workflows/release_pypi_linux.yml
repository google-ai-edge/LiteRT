# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/
#
# This workflow will
# 1. Build Python Wheel for Linux
# 2. Upload Release Asset

name: Build and Release Python Package for Linux

on:
  workflow_call:
    inputs:
      nightly-release-date:
        required: false
        type: string

env:
  CUSTOM_BAZEL_FLAGS: "--config=release_cpu_linux"
  TEST_MANYLINUX_COMPLIANCE: "true"

jobs:
  build_release:
    name: Build and Release Python Wheel for Linux
    strategy:
      matrix:
        docker-python-version: ['3.9', '3.10', '3.11', '3.12']
    runs-on:
      labels: Linux_runner_8_core

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set nightly release date
        if: ${{ inputs.nightly-release-date != '' }}
        run: |
          DATE="${{ inputs.nightly-release-date }}"
          echo "NIGHTLY_RELEASE_DATE=${DATE}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install build wheel numpy twine auditwheel
          python -m pip list

      - name: Build package
        run: |
          rm -rf ./ci/litert_pip
          mkdir -p ./ci/litert_pip

          export DOCKER_PYTHON_VERSION="${{ matrix.docker-python-version }}"
          echo "docker python version: ${DOCKER_PYTHON_VERSION}"

          ./ci/build_pip_package_with_docker.sh

          cp ./dist/*.whl ./ci/litert_pip/

      - name: Verify the distribution
        run: twine check ./ci/litert_pip/*.whl

      - name: List the contents of the wheel
        run: |
          wheels="./ci/litert_pip/*.whl"
          for wheel in $wheels
          do
            echo "Listing $wheel"
            python -m zipfile --list $wheel
            auditwheel show $wheel
          done

      - name: Upload to PyPI
        run: twine upload ./ci/litert_pip/*.whl --non-interactive -p ${{ secrets.PYPI_UPLOAD_TOKEN }}
