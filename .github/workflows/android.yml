name: "Android CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build_host_tools:
    name: "Build Host Tools (flatc)"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install specific CMake version
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.28.1/cmake-3.28.1-linux-x86_64.sh -O cmake_install.sh
          mkdir cmake-install
          sh cmake_install.sh --prefix=./cmake-install --skip-license
          echo "$(realpath ./cmake-install/bin)" >> $GITHUB_PATH
          cmake --version

      - name: Cache flatc build
        id: cache-flatc
        uses: actions/cache@v4
        with:
          path: tflite/flatc-native-build
          key: ${{ runner.os }}-flatc-build-${{ hashFiles('tflite/tools/cmake/native_tools/flatbuffers/CMakeLists.txt') }}

      - name: Build flatc host tool
        if: steps.cache-flatc.outputs.cache-hit != 'true'
        run: |
          set -e
          mkdir -p tflite/flatc-native-build
          cd tflite/flatc-native-build
          cmake ../tools/cmake/native_tools/flatbuffers -G Ninja
          cmake --build .

      - name: Upload flatc artifact
        uses: actions/upload-artifact@v4
        with:
          name: flatc-build
          path: tflite/flatc-native-build/

  build_litert:
    name: "Build LiteRT for Android"
    runs-on: ubuntu-latest
    needs: build_host_tools
    timeout-minutes: 90
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Install specific CMake version
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.28.1/cmake-3.28.1-linux-x86_64.sh -O cmake_install.sh
          mkdir cmake-install
          sh cmake_install.sh --prefix=./cmake-install --skip-license
          echo "$(realpath ./cmake-install/bin)" >> $GITHUB_PATH
          cmake --version

      - name: Download flatc artifact
        uses: actions/download-artifact@v4
        with:
          name: flatc-build
          path: tflite/flatc-native-build/

      - name: Cache Android NDK
        id: cache-ndk
        uses: actions/cache@v4
        with:
          path: ./ndk
          key: ${{ runner.os }}-android-ndk-r26b

      - name: Install Android NDK
        if: steps.cache-ndk.outputs.cache-hit != 'true'
        run: |
          ANDROID_NDK_FILENAME=android-ndk-r26b-linux.zip
          wget -q https://dl.google.com/android/repository/${ANDROID_NDK_FILENAME}
          unzip -q ${ANDROID_NDK_FILENAME} -d ./ndk
          rm ${ANDROID_NDK_FILENAME}

      - name: Set Android NDK Path
        run: |
          NDK_PATH=$(find $PWD/ndk -maxdepth 1 -type d -name "android-ndk-*")
          echo "ANDROID_NDK_HOME=${NDK_PATH}" >> $GITHUB_ENV
          echo "Found NDK at ${NDK_PATH}"

      - name: Cache LiteRT Android Build
        id: cache-litert-android
        uses: actions/cache@v4
        with:
          path: litert/cmake_build_android_arm64
          key: ${{ runner.os }}-litert-android-${{ hashFiles('litert/**', 'tflite/CMakeLists.txt') }}
          restore-keys: |
            ${{ runner.os }}-litert-android-

      - name: Build LiteRT Android Targets
        if: steps.cache-litert-android.outputs.cache-hit != 'true'
        run: |
          set -e
          cd litert
          HOST_TOOLS_DIR_PATH="$GITHUB_WORKSPACE/tflite/flatc-native-build"

          cmake --preset android-arm64 -DTFLITE_HOST_TOOLS_DIR="${HOST_TOOLS_DIR_PATH}"
          cmake --build cmake_build_android_arm64 -j --target litert_runtime_c_api_shared_lib dispatch_api_MediaTek_so dispatch_api_Qualcomm_so run_model apply_plugin_main VERBOSE=1
        env:
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}

      - name: Upload Android Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: litert/cmake_build_android_arm64/