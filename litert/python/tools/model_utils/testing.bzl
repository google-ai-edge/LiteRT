"""Macros for defining LiteRT ModelUtils tests."""

load("//litert/build_common:strict.default.bzl", "py_strict_binary")
load("@llvm-project//llvm:lit_test.bzl", "lit_test")

def model_utils_filecheck_tests(name, srcs, deps = [], **kwargs):
    """Generates lit_test targets and test_suite for LiteRT ModelUtils filecheck tests.

    Args:
        name: The name for the generated `test_suite` target.
        srcs: The list of filecheck test files (typically `.filecheck.py` files). Each source
            file will result in a corresponding `lit_test` target named `<src>.test`.
        deps: Python dependencies for the filecheck tests. These dependencies
            will be built with the interpreter for running the filecheck tests.
        **kwargs: Additional keyword arguments that will be passed directly to
            each `lit_test` rule generated by this macro.
    """

    python_main = name + "_main"
    native.genrule(
        name = python_main,
        outs = [python_main + ".py"],
        cmd = "echo '# Empty entry for the Python interpreter.' > $@",
    )

    python = name + "_python"
    py_strict_binary(
        name = python,
        testonly = 1,
        srcs = [python_main + ".py"],
        exec_properties = {"py_par.mem": "28g"},
        launcher = "//devtools/python/launcher:python_interpreter",
        main = python_main + ".py",
        deps = deps + [python_main],
    )

    for src in srcs:
        lit_test(
            name = src + ".test",
            driver = "@llvm-project//mlir:run_lit",
            srcs = [src],
            data = ["@llvm-project//mlir/test:lit_data", python],
            args = ["--python-interpreter=$(location %s)" % python],
            **kwargs
        )

    native.test_suite(
        name = name,
        tests = [src + ".test" for src in srcs],
    )
