# Copyright 2025 Google LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#!/bin/bash

# Command line arguments:
#   --bin=<string> The binary to execute on the device.
#   --data=<string> Comma-separated list of data files to install on the device.
#   --do_exec=<true|false> Whether to execute the target on the device.
#   --exec_args=<string> '~'-separated list of arguments to pass to the executable on device.
#   --exec_env_vars=<string> Comma-separated list of environment variables to set for the executable on device.
#   --device_rlocation_root=<string> The root directory for device relative locations.
#
# Example:
# ./run_on_device_driver.sh --bin=google3/path/to/my/binary --data=google3/path/to/data1.txt,google3/path/to/data2.txt --do_exec=true --exec_args="--arg1~--arg2" --exec_env_vars="VAR1=value1,VAR2=value2"
#
# Args are normally supplied / auto generated by blaze/bazel build used to run
# a command that calls driver script.

# Set default values for flags
bin=""
data=()
do_exec=false
exec_args=()
exec_env_vars=()
device_rlocation_root="/data/local/tmp/runfiles"

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    --bin=*)
      bin="${1#--bin=}"
      shift
      ;;
    --data=*)
      IFS=',' read -r -a data <<< "${1#--data=}"
      shift
      ;;
    --do_exec*)
      do_exec="${1#--do_exec=}"
      shift
      ;;
    --exec_args=*)
      IFS='~' read -r -a exec_args <<< "${1#--exec_args=}"
      shift
      ;;
    --exec_env_vars=*)
      IFS=',' read -r -a exec_env_vars <<< "${1#--exec_env_vars=}"
      shift
      ;;
    --device_rlocation_root=*)
      device_rlocation_root="${1#--device_rlocation_root=}"
      shift
      ;;
    *)
      # Handle non-flag arguments as exec_args
      exec_args+=("$1")
      shift
      ;;
  esac
done

echo "BIN=${bin}"
echo "DATA=${data[@]}"
echo "DO_EXEC=${do_exec}"
echo "EXEC_ARGS=${exec_args[@]}"
echo "EXEC_ENV_VARS=${exec_env_vars[@]}"


DEVICEBIN="${device_rlocation_root}/${bin#"google3/"}"
HOSTBIN="${bin#"google3/"}"

echo "DEVICEBIN=${DEVICEBIN}"
echo "HOSTBIN=${HOSTBIN}"

adb push --sync "${HOSTBIN}" "${DEVICEBIN}"

for HOSTFILE in "${data[@]}"; do
  DEVICEFILE="${device_rlocation_root}/${HOSTFILE#"google3/"}"
  HOSTFILE="${HOSTFILE#"google3/"}"

  echo "HOSTFILE=${HOSTFILE}"
  echo "DEVICEFILE=${DEVICEFILE}"

  adb push --sync "${HOSTFILE}" "${DEVICEFILE}"
done

if [[ "$do_exec" = false ]]; then
  echo "Finished file transfer. Not executing on device."
  exit 0
fi

echo "Running: adb shell ${exec_env_vars[@]}  \"${DEVICEBIN}\" ${exec_args[@]}"
adb shell "${exec_env_vars[@]}"  "${DEVICEBIN}" "${exec_args[@]}"